rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /trips/{uid} {
      allow read, write: if request.auth != null && request.auth.uid == uid;
    }

    match /vehicles/{vid} {
      allow create: if request.auth != null
        && request.resource.data.keys().hasAll(['permissions', 'classes'])
        && request.resource.data.keys().hasOnly(['permissions', 'classes'])
        && request.resource.data.classes is list
        && request.resource.data.permissions is map
        && request.resource.data.permissions.keys().hasOnly(['write', 'read'])
        && (!request.resource.data.permissions.keys().hasAll(['write']) || request.resource.data.permissions.write is list)
        && (!request.resource.data.permissions.keys().hasAll(['read']) || request.resource.data.permissions.read is list);
      allow list: if request.auth != null
        && request.auth.uid in resource.data.permissions.read;

      match /trips/{tid} {
        allow get, list: if request.auth != null
          && request.auth.uid in get(/databases/$(database)/documents/vehicles/$(vid)).data.permissions.read;
        allow create: if request.auth != null
          && request.auth.uid in get(/databases/$(database)/documents/vehicles/$(vid)).data.permissions.write
          && request.resource.data.class in get(/databases/$(database)/documents/vehicles/$(vid)).data.classes;
      }

    }
  }
}
